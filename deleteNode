// Delete Node at nth position in linked List

#include<iostream>
using namespace std;

// Inserting a node at nth position

struct node
{
  int data ;
  node* link ;
};

node* head;


void insert(int , int);
void deleted(int);
void print();

void insert(int x , int n)
{
  cout<<endl;
  node* temp=new node;
  temp->data=x;
  if(n==1)
  {
    temp->link=head;
    head=temp;
    return ;
  }
  // if n!=1 we have to reach (n-1)th node,we do this by for loop till n-2 times because we are already at
  // head node first node
  node* temp2=new node;
  temp2=head ;    // already at 1st node
  for(int i=0 ; i<n-2 ; ++i)
  {
    temp2=temp2->link;
  }
  temp->link=temp2->link;
  temp2->link=temp;

}

void deleted(int n )
{
  node* temp;
  temp=head;
 if(n==1)
 {
   head=(temp->link);
   delete(temp);
   return ;
 }


 for(int i=0 ;i<n-2 ; ++i)
 {
   temp=temp->link;
 }
 node* temp2=temp->link;
 temp->link=temp2->link;
 delete(temp2);


}

void print()
{
  cout<<"\n\n";
  node* temp;
  temp=head;
  while(temp!=NULL)
  {
    cout<<temp->data<<"  ";
    temp=temp->link;
  }
}



int main ()
{
  head=NULL ;

  insert(5,1);  // 5
    insert(7,1); // 7,5
      insert(3,2); // 7,3,5
        insert(1,1); // 1,7,3,5
          insert(20,3); // 1,7,20,3,5
            insert(18,1); // 18,1,7,20,3,5
              insert(14,4); // 18,1,7,14,20,3,5

              print();
  deleted(3); // 18,1,14,20,3,5
  deleted(4); // 18,1,14,3,5
  deleted(1); // 1,14,3,5
  deleted(4); // 1,14,3
  deleted(2); // 1,3
  deleted(1); // 3
  print();



  return 0 ;
}
