/*
ARRAYS-TARGET SUM TRIPLETS (O(n^2))
Take as input N, the size of array. Take N more inputs and store that in an array. Take as input “target”, a number. Write a function which prints all triplets of numbers which sum to target.

Input Format:
First line contains input N. Next N lines contains the elements of array and N+1 line contains target number.

Constraints:
Length of Array should be between 1 and 1000.

Output Format
Print all the triplet present in the array.

Sample Input
9
5
7
9
1
2
4
6
8
3
10
Sample Output
1, 2 and 7
1, 3 and 6
1, 4 and 5
2, 3 and 5
*/
#include<iostream>
#include<unordered_set>
using namespace std ;


int main()
{
  int n,sum,ssum ;
  cin>>n ;
  int ar[n];
  for(int i=0 ; i<n ; ++i)
  cin>>ar[i];
  cin>>sum ;
cout<<"\n\n";

for(int i=0 ; i<n ; ++i)
{
  ssum=sum-ar[i];
  unordered_set<int>myset ;

  for(int j=i+1 ; j<n ; ++j)
  {
    if(myset.find(ssum-ar[j])!=myset.end())
    {
      cout<<ar[i]<<","<<ssum-ar[j]<<","<<ar[j]<<"\n";
    }
    else
    myset.insert(ar[j]);
  }
}

  return 0;
}
